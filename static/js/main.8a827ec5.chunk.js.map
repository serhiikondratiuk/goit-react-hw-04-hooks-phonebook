{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Section/Section.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Form","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","form","this","wrapper","input","type","onChange","pattern","required","label","button","Component","ContactList","contacts","onDeleteContact","map","id","contact","onClick","Filter","App","filter","addContact","newContact","nanoid","find","toLowerCase","alert","deleteContact","contactId","handleFilterChange","getFilteredContacts","normalizedFilter","includes","prevProps","prevState","localStorage","setItem","JSON","stringify","parsedContacts","parse","getItem","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a827ec5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__9NKEw\",\"label\":\"ContactForm_label__3xjhY\",\"wrapper\":\"ContactForm_wrapper__2ks9r\",\"button\":\"ContactForm_button__svTym\",\"btn-anim1\":\"ContactForm_btn-anim1__Wwr93\",\"btn-anim2\":\"ContactForm_btn-anim2__1hYFg\",\"btn-anim3\":\"ContactForm_btn-anim3__3ir8H\",\"btn-anim4\":\"ContactForm_btn-anim4__ZM5xS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__10-MK\",\"name\":\"ContactList_name__3dnH1\",\"number\":\"ContactList_number__1Xj4M\",\"button\":\"ContactList_button__281Ec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__1qfuD\",\"input\":\"Filter_input__3dw-Z\",\"label\":\"Filter_label__1qzlQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3pqsf\",\"title\":\"App_title__1cw0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2ToNH\",\"title\":\"Section_title__2YCSz\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <div className={s.wrapper}>\n          <input\n            className={s.input}\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label className={s.label}>Name</label>\n        </div>\n        <div className={s.wrapper}>\n          <input\n            className={s.input}\n            type=\"tel\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <label className={s.label}>Number</label>\n        </div>\n        <button className={s.button} type=\"submit\">\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contact} key={id}>\n          <span className={s.name}>{name}</span>\n          <span className={s.number}>{number}</span>\n          <button\n            className={s.button}\n            onClick={() => onDeleteContact(id)}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.wrapper}>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        name=\"filter\"\n      />\n      <label className={s.label}>Find contacts by name</label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Form from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport { nanoid } from \"nanoid\";\nimport s from \"./App.module.css\";\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n    const { contacts } = this.state;\n    const repeatedName = contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    repeatedName\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  handleFilterChange = (e) => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className={s.wrapper}>\n        <Section>\n          <h1 className={s.title}>Phonebook</h1>\n          <Form onSubmit={this.addContact} />\n        </Section>\n\n        <Section>\n          <h2 className={s.title}>Contacts</h2>\n          <Filter value={filter} onChange={this.handleFilterChange} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}